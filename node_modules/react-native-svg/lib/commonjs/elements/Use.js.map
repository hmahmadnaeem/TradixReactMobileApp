{"version":3,"sources":["Use.tsx"],"names":["Use","props","children","x","y","width","height","xlinkHref","href","matched","match","idPattern","console","warn","refMethod","Shape","displayName","defaultProps","RNSVGUse"],"mappings":"i5BAAA,oDACA,yCACA,kFAEA,iCACA,uD,s3BAEqBA,CAAAA,G,4RAiBV,IACCC,CAAAA,KADD,CACW,IADX,CACCA,KADD,IAGLC,CAAAA,QAHK,CAUHD,KAVG,CAGLC,QAHK,CAILC,CAJK,CAUHF,KAVG,CAILE,CAJK,CAKLC,CALK,CAUHH,KAVG,CAKLG,CALK,CAMLC,KANK,CAUHJ,KAVG,CAMLI,KANK,CAOLC,MAPK,CAUHL,KAVG,CAOLK,MAPK,CAQLC,SARK,CAUHN,KAVG,CAQLM,SARK,aAUHN,KAVG,CASLO,IATK,CASLA,IATK,sBASED,SATF,aAYP,GAAME,CAAAA,OAAO,CAAGD,IAAI,EAAIA,IAAI,CAACE,KAAL,CAAWC,eAAX,CAAxB,CACA,GAAMD,CAAAA,KAAK,CAAGD,OAAO,EAAIA,OAAO,CAAC,CAAD,CAAhC,CAEA,GAAI,CAACC,KAAL,CAAY,CACVE,OAAO,CAACC,IAAR,CACE,gFACEL,IADF,CAEE,GAHJ,EAKD,CAED,MACE,8BAAC,QAAD,wBACE,GAAG,CAAE,KAAKM,SADZ,EAEM,2CAAkB,iCAAeb,KAAf,CAAlB,EAAyCE,CAAC,CAAE,IAA5C,CAAkDC,CAAC,CAAE,IAArD,GAA6D,IAA7D,CAFN,EAGE,IAAI,CAAEM,KAHR,CAIE,CAAC,CAAEP,CAJL,CAKE,CAAC,CAAEC,CALL,CAME,KAAK,CAAEC,KANT,CAOE,MAAM,CAAEC,MAPV,kDASGJ,QATH,CADF,CAaD,C,iBArD8Ba,e,sBAAZf,G,CAQZgB,W,CAAc,K,CARFhB,G,CAUZiB,Y,CAAe,CACpBd,CAAC,CAAE,CADiB,CAEpBC,CAAC,CAAE,CAFiB,CAGpBC,KAAK,CAAE,CAHa,CAIpBC,MAAM,CAAE,CAJY,C,CA8CjB,GAAMY,CAAAA,QAAQ,CAAG,wCAAuB,UAAvB,CAAjB,C","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport { NumberProp } from '../lib/extract/types';\nimport { idPattern } from '../lib/util';\nimport Shape from './Shape';\n\nexport default class Use extends Shape<{\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  xlinkHref?: string;\n  href?: string;\n}> {\n  static displayName = 'Use';\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      children,\n      x,\n      y,\n      width,\n      height,\n      xlinkHref,\n      href = xlinkHref,\n    } = props;\n\n    const matched = href && href.match(idPattern);\n    const match = matched && matched[1];\n\n    if (!match) {\n      console.warn(\n        'Invalid `href` prop for `Use` element, expected a href like \"#id\", but got: \"' +\n          href +\n          '\"',\n      );\n    }\n\n    return (\n      <RNSVGUse\n        ref={this.refMethod}\n        {...extractProps({ ...propsAndStyles(props), x: null, y: null }, this)}\n        href={match}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n      >\n        {children}\n      </RNSVGUse>\n    );\n  }\n}\n\nexport const RNSVGUse = requireNativeComponent('RNSVGUse');\n"]}