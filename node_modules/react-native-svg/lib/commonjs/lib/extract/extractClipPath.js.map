{"version":3,"sources":["extractClipPath.ts"],"names":["clipRules","evenodd","nonzero","extractClipPath","props","clipPath","clipRule","extracted","matched","match","idPattern","console","warn"],"mappings":"yFAAA,6BAGA,GAAMA,CAAAA,SAA+C,CAAG,CACtDC,OAAO,CAAE,CAD6C,CAEtDC,OAAO,CAAE,CAF6C,CAAxD,CAKe,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAA2C,IAChDC,CAAAA,QADgD,CACzBD,KADyB,CAChDC,QADgD,CACtCC,QADsC,CACzBF,KADyB,CACtCE,QADsC,CAExD,GAAMC,CAAAA,SAGL,CAAG,EAHJ,CAKA,GAAID,QAAJ,CAAc,CACZC,SAAS,CAACD,QAAV,CAAqBN,SAAS,CAACM,QAAD,CAAT,GAAwB,CAAxB,CAA4B,CAA5B,CAAgC,CAArD,CACD,CAED,GAAID,QAAJ,CAAc,CACZ,GAAMG,CAAAA,OAAO,CAAGH,QAAQ,CAACI,KAAT,CAAeC,eAAf,CAAhB,CAEA,GAAIF,OAAJ,CAAa,CACXD,SAAS,CAACF,QAAV,CAAqBG,OAAO,CAAC,CAAD,CAA5B,CACD,CAFD,IAEO,CACLG,OAAO,CAACC,IAAR,CACE,sEACEP,QADF,CAEE,GAHJ,EAKD,CACF,CAED,MAAOE,CAAAA,SAAP,CACD","sourcesContent":["import { idPattern } from '../util';\nimport { ClipProps } from './types';\n\nconst clipRules: { evenodd: number; nonzero: number } = {\n  evenodd: 0,\n  nonzero: 1,\n};\n\nexport default function extractClipPath(props: ClipProps) {\n  const { clipPath, clipRule } = props;\n  const extracted: {\n    clipPath?: string;\n    clipRule?: number;\n  } = {};\n\n  if (clipRule) {\n    extracted.clipRule = clipRules[clipRule] === 0 ? 0 : 1;\n  }\n\n  if (clipPath) {\n    const matched = clipPath.match(idPattern);\n\n    if (matched) {\n      extracted.clipPath = matched[1];\n    } else {\n      console.warn(\n        'Invalid `clipPath` prop, expected a clipPath like \"#id\", but got: \"' +\n          clipPath +\n          '\"',\n      );\n    }\n  }\n\n  return extracted;\n}\n"]}