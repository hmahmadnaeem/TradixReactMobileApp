{"version":3,"sources":["extractProps.ts"],"names":["propsAndStyles","props","style","Array","isArray","Object","assign","getMarker","marker","undefined","matched","match","idPattern","extractProps","ref","opacity","onLayout","id","clipPath","mask","markerStart","markerMid","markerEnd","transform","styleProperties","transformProps","matrix","extracted","propList","name","String","console","warn"],"mappings":"ieAAA,kEACA,sEACA,oDACA,0EACA,4EACA,wEACA,6B,yxBAWO,QAASA,CAAAA,cAAT,CAAwBC,KAAxB,CAA6D,IAC1DC,CAAAA,KAD0D,CAChDD,KADgD,CAC1DC,KAD0D,CAElE,MAAO,CAACA,KAAD,CACHD,KADG,kBAGGE,KAAK,CAACC,OAAN,CAAcF,KAAd,EAAuBG,MAAM,CAACC,MAAP,OAAAD,MAAM,EAAQ,EAAR,yCAAeH,KAAf,GAA7B,CAAqDA,KAHxD,IAIED,KAJF,CAAP,CAMD,CAED,QAASM,CAAAA,SAAT,CAAmBC,MAAnB,CAAoC,CAClC,GAAI,CAACA,MAAL,CAAa,CACX,MAAOC,CAAAA,SAAP,CACD,CACD,GAAMC,CAAAA,OAAO,CAAGF,MAAM,CAACG,KAAP,CAAaC,eAAb,CAAhB,CACA,MAAOF,CAAAA,OAAO,CAAGA,OAAO,CAAC,CAAD,CAAV,CAAgBD,SAA9B,CACD,CAEc,QAASI,CAAAA,YAAT,CACbZ,KADa,CAiBba,GAjBa,CAkBb,IAEEC,CAAAA,OAFF,CAYId,KAZJ,CAEEc,OAFF,CAGEC,QAHF,CAYIf,KAZJ,CAGEe,QAHF,CAIEC,EAJF,CAYIhB,KAZJ,CAIEgB,EAJF,CAKEC,QALF,CAYIjB,KAZJ,CAKEiB,QALF,CAMEC,IANF,CAYIlB,KAZJ,CAMEkB,IANF,CAOEX,MAPF,CAYIP,KAZJ,CAOEO,MAPF,oBAYIP,KAZJ,CAQEmB,WARF,CAQEA,WARF,6BAQgBZ,MARhB,qCAYIP,KAZJ,CASEoB,SATF,CASEA,SATF,2BAScb,MATd,mCAYIP,KAZJ,CAUEqB,SAVF,CAUEA,SAVF,2BAUcd,MAVd,kBAWEe,SAXF,CAYItB,KAZJ,CAWEsB,SAXF,CAaA,GAAMC,CAAAA,eAAyB,CAAG,EAAlC,CACA,GAAMC,CAAAA,cAAc,CAAG,sCAAgBxB,KAAhB,CAAvB,CACA,GAAMyB,CAAAA,MAAM,CAAG,wCAAkBD,cAAlB,CAAkCF,SAAlC,CAAf,CACA,GAAMI,CAAAA,SAWL,gBACCD,MAAM,CAANA,MADD,CAECN,WAAW,CAAEb,SAAS,CAACa,WAAD,CAFvB,CAGCC,SAAS,CAAEd,SAAS,CAACc,SAAD,CAHrB,CAICC,SAAS,CAAEf,SAAS,CAACe,SAAD,CAJrB,CAKCN,QAAQ,CAARA,QALD,EAMIS,cANJ,EAOCG,QAAQ,CAAEJ,eAPX,CAQCT,OAAO,CAAE,4BAAeA,OAAf,CARV,EASI,8BAAiBd,KAAjB,CAAwBa,GAAxB,CATJ,IAUI,yBAAYb,KAAZ,CAAmBuB,eAAnB,CAVJ,IAWI,2BAAcvB,KAAd,CAAqBuB,eAArB,CAXJ,CAXD,CAyBA,GAAIP,EAAJ,CAAQ,CACNU,SAAS,CAACE,IAAV,CAAiBC,MAAM,CAACb,EAAD,CAAvB,CACD,CAED,GAAIC,QAAJ,CAAc,CACZ,sBAAcS,SAAd,CAAyB,6BAAgB1B,KAAhB,CAAzB,EACD,CAED,GAAIkB,IAAJ,CAAU,CACR,GAAMT,CAAAA,OAAO,CAAGS,IAAI,CAACR,KAAL,CAAWC,eAAX,CAAhB,CAEA,GAAIF,OAAJ,CAAa,CACXiB,SAAS,CAACR,IAAV,CAAiBT,OAAO,CAAC,CAAD,CAAxB,CACD,CAFD,IAEO,CACLqB,OAAO,CAACC,IAAR,CACE,8DACEb,IADF,CAEE,GAHJ,EAKD,CACF,CAED,MAAOQ,CAAAA,SAAP,CACD","sourcesContent":["import extractFill from './extractFill';\nimport extractStroke from './extractStroke';\nimport { transformToMatrix, props2transform } from './extractTransform';\nimport extractClipPath from './extractClipPath';\nimport extractResponder from './extractResponder';\nimport extractOpacity from './extractOpacity';\nimport { idPattern } from '../util';\nimport {\n  ClipProps,\n  FillProps,\n  NumberProp,\n  ResponderProps,\n  StrokeProps,\n  TransformProps,\n} from './types';\nimport { Component } from 'react';\n\nexport function propsAndStyles(props: Object & { style?: [] | {} }) {\n  const { style } = props;\n  return !style\n    ? props\n    : {\n        ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n        ...props,\n      };\n}\n\nfunction getMarker(marker?: string) {\n  if (!marker) {\n    return undefined;\n  }\n  const matched = marker.match(idPattern);\n  return matched ? matched[1] : undefined;\n}\n\nexport default function extractProps(\n  props: {\n    id?: string;\n    mask?: string;\n    marker?: string;\n    markerStart?: string;\n    markerMid?: string;\n    markerEnd?: string;\n    clipPath?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    transform?: number[] | string | TransformProps;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps,\n  ref: Object,\n) {\n  const {\n    opacity,\n    onLayout,\n    id,\n    clipPath,\n    mask,\n    marker,\n    markerStart = marker,\n    markerMid = marker,\n    markerEnd = marker,\n    transform,\n  } = props;\n  const styleProperties: string[] = [];\n  const transformProps = props2transform(props);\n  const matrix = transformToMatrix(transformProps, transform);\n  const extracted: {\n    name?: string;\n    mask?: string;\n    opacity: number;\n    matrix: number[];\n    propList: string[];\n    onLayout?: () => void;\n    ref?: (instance: Component | null) => void;\n    markerStart?: string;\n    markerMid?: string;\n    markerEnd?: string;\n  } = {\n    matrix,\n    markerStart: getMarker(markerStart),\n    markerMid: getMarker(markerMid),\n    markerEnd: getMarker(markerEnd),\n    onLayout,\n    ...transformProps,\n    propList: styleProperties,\n    opacity: extractOpacity(opacity),\n    ...extractResponder(props, ref),\n    ...extractFill(props, styleProperties),\n    ...extractStroke(props, styleProperties),\n  };\n\n  if (id) {\n    extracted.name = String(id);\n  }\n\n  if (clipPath) {\n    Object.assign(extracted, extractClipPath(props));\n  }\n\n  if (mask) {\n    const matched = mask.match(idPattern);\n\n    if (matched) {\n      extracted.mask = matched[1];\n    } else {\n      console.warn(\n        'Invalid `mask` prop, expected a mask like \"#id\", but got: \"' +\n          mask +\n          '\"',\n      );\n    }\n  }\n\n  return extracted;\n}\n"]}