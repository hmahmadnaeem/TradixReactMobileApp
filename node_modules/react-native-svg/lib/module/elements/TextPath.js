import _defineProperty from"@babel/runtime/helpers/defineProperty";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";import _extends from"@babel/runtime/helpers/extends";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/jannegylling/IdeaProjects/react-native-svg/src/elements/TextPath.tsx";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import{requireNativeComponent}from'react-native';import extractTransform from'../lib/extract/extractTransform';import extractProps,{propsAndStyles}from'../lib/extract/extractProps';import extractText from'../lib/extract/extractText';import{idPattern,pickNotNil}from'../lib/util';import Shape from'./Shape';import TSpan from'./TSpan';var TextPath=function(_Shape){_inherits(TextPath,_Shape);function TextPath(){var _getPrototypeOf2;var _this;_classCallCheck(this,TextPath);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TextPath)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.setNativeProps=function(props){var matrix=!props.matrix&&extractTransform(props);if(matrix){props.matrix=matrix;}_extends(props,pickNotNil(extractText(props,true)));_this.root&&_this.root.setNativeProps(props);};return _this;}_createClass(TextPath,[{key:"render",value:function render(){var _this$props=this.props,children=_this$props.children,xlinkHref=_this$props.xlinkHref,_this$props$href=_this$props.href,href=_this$props$href===void 0?xlinkHref:_this$props$href,_this$props$startOffs=_this$props.startOffset,startOffset=_this$props$startOffs===void 0?0:_this$props$startOffs,method=_this$props.method,spacing=_this$props.spacing,side=_this$props.side,alignmentBaseline=_this$props.alignmentBaseline,midLine=_this$props.midLine,prop=_objectWithoutProperties(_this$props,["children","xlinkHref","href","startOffset","method","spacing","side","alignmentBaseline","midLine"]);var matched=href&&href.match(idPattern);var match=matched&&matched[1];if(match){var props=extractProps(_objectSpread({},propsAndStyles(prop),{x:null,y:null}),this);_extends(props,extractText({children:children},true),{href:match,startOffset:startOffset,method:method,spacing:spacing,side:side,alignmentBaseline:alignmentBaseline,midLine:midLine});props.ref=this.refMethod;return React.createElement(RNSVGTextPath,_extends({},props,{__source:{fileName:_jsxFileName,lineNumber:81}}));}console.warn('Invalid `href` prop for `TextPath` element, expected a href like "#id", but got: "'+href+'"');return React.createElement(TSpan,{ref:this.refMethod,__source:{fileName:_jsxFileName,lineNumber:90}},children);}}]);return TextPath;}(Shape);TextPath.displayName='TextPath';export{TextPath as default};export var RNSVGTextPath=requireNativeComponent('RNSVGTextPath');
//# sourceMappingURL=TextPath.js.map