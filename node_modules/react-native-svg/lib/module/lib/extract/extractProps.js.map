{"version":3,"sources":["extractProps.ts"],"names":["extractFill","extractStroke","transformToMatrix","props2transform","extractClipPath","extractResponder","extractOpacity","idPattern","propsAndStyles","props","style","Array","isArray","Object","assign","getMarker","marker","undefined","matched","match","extractProps","ref","opacity","onLayout","id","clipPath","mask","markerStart","markerMid","markerEnd","transform","styleProperties","transformProps","matrix","extracted","propList","name","String","console","warn"],"mappings":"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","sourcesContent":["import extractFill from './extractFill';\nimport extractStroke from './extractStroke';\nimport { transformToMatrix, props2transform } from './extractTransform';\nimport extractClipPath from './extractClipPath';\nimport extractResponder from './extractResponder';\nimport extractOpacity from './extractOpacity';\nimport { idPattern } from '../util';\nimport {\n  ClipProps,\n  FillProps,\n  NumberProp,\n  ResponderProps,\n  StrokeProps,\n  TransformProps,\n} from './types';\nimport { Component } from 'react';\n\nexport function propsAndStyles(props: Object & { style?: [] | {} }) {\n  const { style } = props;\n  return !style\n    ? props\n    : {\n        ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n        ...props,\n      };\n}\n\nfunction getMarker(marker?: string) {\n  if (!marker) {\n    return undefined;\n  }\n  const matched = marker.match(idPattern);\n  return matched ? matched[1] : undefined;\n}\n\nexport default function extractProps(\n  props: {\n    id?: string;\n    mask?: string;\n    marker?: string;\n    markerStart?: string;\n    markerMid?: string;\n    markerEnd?: string;\n    clipPath?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    transform?: number[] | string | TransformProps;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps,\n  ref: Object,\n) {\n  const {\n    opacity,\n    onLayout,\n    id,\n    clipPath,\n    mask,\n    marker,\n    markerStart = marker,\n    markerMid = marker,\n    markerEnd = marker,\n    transform,\n  } = props;\n  const styleProperties: string[] = [];\n  const transformProps = props2transform(props);\n  const matrix = transformToMatrix(transformProps, transform);\n  const extracted: {\n    name?: string;\n    mask?: string;\n    opacity: number;\n    matrix: number[];\n    propList: string[];\n    onLayout?: () => void;\n    ref?: (instance: Component | null) => void;\n    markerStart?: string;\n    markerMid?: string;\n    markerEnd?: string;\n  } = {\n    matrix,\n    markerStart: getMarker(markerStart),\n    markerMid: getMarker(markerMid),\n    markerEnd: getMarker(markerEnd),\n    onLayout,\n    ...transformProps,\n    propList: styleProperties,\n    opacity: extractOpacity(opacity),\n    ...extractResponder(props, ref),\n    ...extractFill(props, styleProperties),\n    ...extractStroke(props, styleProperties),\n  };\n\n  if (id) {\n    extracted.name = String(id);\n  }\n\n  if (clipPath) {\n    Object.assign(extracted, extractClipPath(props));\n  }\n\n  if (mask) {\n    const matched = mask.match(idPattern);\n\n    if (matched) {\n      extracted.mask = matched[1];\n    } else {\n      console.warn(\n        'Invalid `mask` prop, expected a mask like \"#id\", but got: \"' +\n          mask +\n          '\"',\n      );\n    }\n  }\n\n  return extracted;\n}\n"]}